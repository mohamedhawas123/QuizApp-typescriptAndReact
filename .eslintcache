[{"/home/metro/Desktop/projects/react-quiz/src/index.tsx":"1","/home/metro/Desktop/projects/react-quiz/src/App.tsx":"2","/home/metro/Desktop/projects/react-quiz/src/reportWebVitals.ts":"3","/home/metro/Desktop/projects/react-quiz/src/components/QuetionComponent.tsx":"4","/home/metro/Desktop/projects/react-quiz/src/api.ts":"5","/home/metro/Desktop/projects/react-quiz/src/utils.ts":"6"},{"size":478,"mtime":1606938956150,"results":"7","hashOfConfig":"8"},{"size":1412,"mtime":1607627463073,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1606938545565,"results":"10","hashOfConfig":"8"},{"size":786,"mtime":1607111774565,"results":"11","hashOfConfig":"8"},{"size":768,"mtime":1607631169096,"results":"12","hashOfConfig":"8"},{"size":92,"mtime":1607629119687,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"k0hm92",{"filePath":"17","messages":"18","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/metro/Desktop/projects/react-quiz/src/index.tsx",[],["30","31"],"/home/metro/Desktop/projects/react-quiz/src/App.tsx",["32","33","34","35","36","37","38","39","40","41","42","43","44"],"import React, { useState } from 'react';\nimport QuestionCard from './components/QuetionComponent'\nimport {fetchQuizQestions, Diffculty} from './api'\n\nconst totalQuestion = 10\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(false)\n  const [questions, setQuestions] = useState([])\n  const [number, setNumber] = useState(0)\n  const [userAnswers, setUserAnswers] = useState([])\n  const [score, setScore] = useState(0)\n  const [gameover, setGameover] = useState(true)\n  \n\n  console.log(fetchQuizQestions(totalQuestion, Diffculty.EASY ))\n\n  const startTrivia = async () => {\n    //\n  }\n\n  const checkAnser = (e: React.MouseEvent<HTMLButtonElement>) => {\n    //\n  }\n\n  const nextQuestion = () => {\n    //\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>React Quiz</h1>\n      <button className=\"start\" onClick={startTrivia}>\n        Start \n      </button>\n      <p className=\"score\">Score..</p>\n      <p>Loading Questions...</p>\n      {/*\n      <QuestionCard\n        questionNr={number + 1}\n        totalQuestion={totalQuestion}\n        question={questions[number].question}\n        answers={questions[number].answer}\n        useranswers={userAnswers ? userAnswers[number] : undefined}\n        callback={checkAnser}\n      />\n      */}\n      <button className=\"next\" onClick={nextQuestion}>Next Question</button>\n      <button onClick={checkAnser}>Chec</button>\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/metro/Desktop/projects/react-quiz/src/reportWebVitals.ts",[],"/home/metro/Desktop/projects/react-quiz/src/components/QuetionComponent.tsx",["45"],"import { type } from 'os'\nimport React from 'react'\n\n\ntype Props = {\n  question: string;\n  answers: string[];\n  callback: any;\n  useranswers: boolean;\n  questionNr: number;\n  totalQuestion: number\n\n}\n\nconst QuestionCard: React.FC<Props> = ({ question, answers, callback, useranswers, questionNr, totalQuestion }) => {\n  \n  return (\n    <div>\n      <p className=\"number\">\n        Question: {questionNr / totalQuestion}\n      </p>\n      <p dangerouslySetInnerHTML={{ __html: question }} />\n      <div>\n        {answers.map(answer => {\n          return (\n            <button disabled={useranswers} onClick={callback}>\n              <span dangerouslySetInnerHTML={{__html: answer}} />\n            </button>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\n\nexport default QuestionCard",["46","47"],"/home/metro/Desktop/projects/react-quiz/src/api.ts",[],"/home/metro/Desktop/projects/react-quiz/src/utils.ts",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":20},{"ruleId":"52","severity":1,"message":"56","line":9,"column":10,"nodeType":"54","messageId":"55","endLine":9,"endColumn":17},{"ruleId":"52","severity":1,"message":"57","line":9,"column":19,"nodeType":"54","messageId":"55","endLine":9,"endColumn":29},{"ruleId":"52","severity":1,"message":"58","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":19},{"ruleId":"52","severity":1,"message":"59","line":10,"column":21,"nodeType":"54","messageId":"55","endLine":10,"endColumn":33},{"ruleId":"52","severity":1,"message":"60","line":11,"column":10,"nodeType":"54","messageId":"55","endLine":11,"endColumn":16},{"ruleId":"52","severity":1,"message":"61","line":11,"column":18,"nodeType":"54","messageId":"55","endLine":11,"endColumn":27},{"ruleId":"52","severity":1,"message":"62","line":12,"column":10,"nodeType":"54","messageId":"55","endLine":12,"endColumn":21},{"ruleId":"52","severity":1,"message":"63","line":12,"column":23,"nodeType":"54","messageId":"55","endLine":12,"endColumn":37},{"ruleId":"52","severity":1,"message":"64","line":13,"column":10,"nodeType":"54","messageId":"55","endLine":13,"endColumn":15},{"ruleId":"52","severity":1,"message":"65","line":13,"column":17,"nodeType":"54","messageId":"55","endLine":13,"endColumn":25},{"ruleId":"52","severity":1,"message":"66","line":14,"column":10,"nodeType":"54","messageId":"55","endLine":14,"endColumn":18},{"ruleId":"52","severity":1,"message":"67","line":14,"column":20,"nodeType":"54","messageId":"55","endLine":14,"endColumn":31},{"ruleId":"52","severity":1,"message":"68","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":14},{"ruleId":"48","replacedBy":"69"},{"ruleId":"50","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'QuestionCard' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'questions' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'userAnswers' is assigned a value but never used.","'setUserAnswers' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","'gameover' is assigned a value but never used.","'setGameover' is assigned a value but never used.","'type' is defined but never used.",["71"],["72"],"no-global-assign","no-unsafe-negation"]